pipeline {
    agent any

    tools {
        maven 'maven'
        jdk 'jdk17' // Ensure this matches the name of the JDK installation in Jenkins Global Tool Configuration
    }

    environment {
        JAVA_HOME = tool 'jdk17'
        PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Build') {
            steps {
                dir('C:/ProgramData/Jenkins/.jenkins/workspace/sample/studentservice') {
                    bat 'mvn clean install -Dmaven.test.failure.ignore=true'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImage = 'student-service:latest'
                    dir('C:/ProgramData/Jenkins/.jenkins/workspace/sample/studentservice') {
                        bat "docker build -t ${dockerImage} ."
                    }
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    def dockerImage = 'student-service:latest'
                    bat 'docker stop student-service || true' // Stop if running
                    bat 'docker rm student-service || true'   // Remove if exists
                    bat "docker run -d --name student-service -p 8080:8080 ${dockerImage}"
                }
            }
        }
    }
}
